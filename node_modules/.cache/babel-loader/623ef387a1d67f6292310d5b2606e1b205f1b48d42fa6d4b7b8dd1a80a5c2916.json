{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\r0gc0\\\\Downloads\\\\Text-Summarizer-main\\\\Text-Summarizer-main\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [value, setValue] = useState(\"\");\n  const [questionsAndAnswers, setQuestionsAndAnswers] = useState([]);\n  const [flashcards, setFlashcards] = useState([]);\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState(null);\n  const handleSubmit = async () => {\n    setSubmitting(true);\n    setError(null);\n    try {\n      // Replace with your AI API logic for generating questions and answers\n      const response = await fetchYourAIAPI(value);\n      const generatedQuestionsAndAnswers = response.data; // [{ question: \"?\", answer: \"!\" }, ...]\n\n      setQuestionsAndAnswers(generatedQuestionsAndAnswers);\n    } catch (err) {\n      setError(\"Failed to generate questions and answers\");\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  const saveFlashcard = async (question, answer) => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/flashcards\", {\n        question,\n        answer\n      });\n      setFlashcards([...flashcards, response.data]);\n    } catch (err) {\n      console.error(\"Failed to save flashcard:\", err);\n    }\n  };\n  const fetchFlashcards = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/flashcards\");\n      setFlashcards(response.data);\n    } catch (err) {\n      console.error(\"Failed to fetch flashcards:\", err);\n    }\n  };\n  const deleteFlashcard = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/flashcards/${id}`);\n      setFlashcards(flashcards.filter(card => card._id !== id));\n    } catch (err) {\n      console.error(\"Failed to delete flashcard:\", err);\n    }\n  };\n  useEffect(() => {\n    fetchFlashcards();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: value,\n      onChange: e => setValue(e.target.value),\n      placeholder: \"Enter text to generate questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      disabled: submitting,\n      children: submitting ? \"Generating...\" : \"Generate Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), questionsAndAnswers.map((_ref, index) => {\n      let {\n        question,\n        answer\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Q: \", question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"A: \", answer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => saveFlashcard(question, answer),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Saved Flashcards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), flashcards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Q: \", card.question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"A: \", card.answer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteFlashcard(card._id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, card._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5xX6ZpscOfeMrm+8KZZK0VxAdhE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","App","_s","value","setValue","questionsAndAnswers","setQuestionsAndAnswers","flashcards","setFlashcards","submitting","setSubmitting","error","setError","handleSubmit","response","fetchYourAIAPI","generatedQuestionsAndAnswers","data","err","saveFlashcard","question","answer","post","console","fetchFlashcards","get","deleteFlashcard","id","delete","filter","card","_id","className","children","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","map","_ref","index","_c","$RefreshReg$"],"sources":["C:/Users/r0gc0/Downloads/Text-Summarizer-main/Text-Summarizer-main/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [value, setValue] = useState(\"\");\n  const [questionsAndAnswers, setQuestionsAndAnswers] = useState([]);\n  const [flashcards, setFlashcards] = useState([]);\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleSubmit = async () => {\n    setSubmitting(true);\n    setError(null);\n\n    try {\n      // Replace with your AI API logic for generating questions and answers\n      const response = await fetchYourAIAPI(value); \n      const generatedQuestionsAndAnswers = response.data; // [{ question: \"?\", answer: \"!\" }, ...]\n\n      setQuestionsAndAnswers(generatedQuestionsAndAnswers);\n    } catch (err) {\n      setError(\"Failed to generate questions and answers\");\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  const saveFlashcard = async (question, answer) => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/flashcards\", {\n        question,\n        answer,\n      });\n      setFlashcards([...flashcards, response.data]);\n    } catch (err) {\n      console.error(\"Failed to save flashcard:\", err);\n    }\n  };\n\n  const fetchFlashcards = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/flashcards\");\n      setFlashcards(response.data);\n    } catch (err) {\n      console.error(\"Failed to fetch flashcards:\", err);\n    }\n  };\n\n  const deleteFlashcard = async (id) => {\n    try {\n      await axios.delete(`http://localhost:5000/flashcards/${id}`);\n      setFlashcards(flashcards.filter((card) => card._id !== id));\n    } catch (err) {\n      console.error(\"Failed to delete flashcard:\", err);\n    }\n  };\n\n  useEffect(() => {\n    fetchFlashcards();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <textarea\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n        placeholder=\"Enter text to generate questions...\"\n      ></textarea>\n      <button onClick={handleSubmit} disabled={submitting}>\n        {submitting ? \"Generating...\" : \"Generate Questions\"}\n      </button>\n\n      {questionsAndAnswers.map(({ question, answer }, index) => (\n        <div key={index}>\n          <p>Q: {question}</p>\n          <p>A: {answer}</p>\n          <button onClick={() => saveFlashcard(question, answer)}>Save</button>\n        </div>\n      ))}\n\n      <h2>Saved Flashcards</h2>\n      {flashcards.map((card) => (\n        <div key={card._id}>\n          <p>Q: {card.question}</p>\n          <p>A: {card.answer}</p>\n          <button onClick={() => deleteFlashcard(card._id)}>Delete</button>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}